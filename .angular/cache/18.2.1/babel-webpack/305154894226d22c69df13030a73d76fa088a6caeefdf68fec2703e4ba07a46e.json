{"ast":null,"code":"import { ElementRef } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nexport let NumberOnlyDirective = /*#__PURE__*/(() => {\n  class NumberOnlyDirective {\n    constructor(_el) {\n      this._el = _el;\n    }\n    onInputChange(event) {\n      const initalValue = this._el.nativeElement.value;\n      if (initalValue == 0) {\n        this._el.nativeElement.value = \"\";\n      } else {\n        this._el.nativeElement.value = initalValue.replace(/[^0-9]*/g, \"\");\n        if (initalValue !== this._el.nativeElement.value) {\n          event.stopPropagation();\n        }\n      }\n    }\n    static #_ = (() => this.ɵfac = function NumberOnlyDirective_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NumberOnlyDirective)(i0.ɵɵdirectiveInject(i0.ElementRef));\n    })();\n    static #_2 = (() => this.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n      type: NumberOnlyDirective,\n      selectors: [[\"input\", \"numberOnly\", \"\"]],\n      hostBindings: function NumberOnlyDirective_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"input\", function NumberOnlyDirective_input_HostBindingHandler($event) {\n            return ctx.onInputChange($event);\n          });\n        }\n      }\n    }))();\n  }\n  return NumberOnlyDirective;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}