{"ast":null,"code":"import { ApiService } from '../../core/services/api.service';\nimport { BehaviorSubject } from 'rxjs';\nimport { environment } from '../../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../core/services/api.service\";\nexport let CustomerService = /*#__PURE__*/(() => {\n  class CustomerService {\n    constructor(apiService) {\n      this.apiService = apiService;\n      this.single_product_id = new BehaviorSubject(null);\n      this.currentProduct = this.single_product_id.asObservable();\n      this.product_url = environment.server_url + '/products/';\n      this.user_url = environment.server_url + '/user/';\n      this.order_url = environment.server_url + '/orders/';\n    }\n    allProduct() {\n      return this.apiService.get(this.product_url);\n    }\n    quickBuyProduct(product_id) {\n      this.single_product_id.next(product_id);\n    }\n    individualProduct(id) {\n      return this.apiService.get(this.product_url + id);\n    }\n    userDetail(id) {\n      return this.apiService.get(this.user_url + id);\n    }\n    insertNewOrder(order_dto) {\n      return this.apiService.post(this.order_url, order_dto);\n    }\n    orderDashboardData() {\n      return this.apiService.get(this.order_url);\n    }\n    productDashboardData() {\n      return this.apiService.get(this.product_url);\n    }\n    static #_ = (() => this.ɵfac = function CustomerService_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || CustomerService)(i0.ɵɵinject(i1.ApiService));\n    })();\n    static #_2 = (() => this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: CustomerService,\n      factory: CustomerService.ɵfac,\n      providedIn: 'root'\n    }))();\n  }\n  return CustomerService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}